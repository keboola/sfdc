<?xml version="1.0" encoding="UTF-8"?>

<project name="name-of-project" default="build">
 <property name="source" value="application"/>
 <property name="app-lib" value="library/App"/>

 <target name="build"
   depends="prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdox,phpunit-ci,phpcb"/>

 <target name="build-parallel"
   depends="prepare,lint,tools-parallel,phpunit-ci,phpcb"/>

 <target name="tools-parallel"
         description="Run tools in parallel">
  <parallel threadCount="2">
   <sequential>
    <antcall target="pdepend"/>
    <antcall target="phpmd-ci"/>
   </sequential>
   <antcall target="phpcpd"/>
   <antcall target="phpcs-ci"/>
   <antcall target="phploc"/>
   <antcall target="phpdox"/>
  </parallel>
 </target>

 <target name="clean" description="Cleanup build artifacts">
  <delete dir="${basedir}/build/results/api"/>
  <delete dir="${basedir}/build/results/api-app-lib"/>
  <delete dir="${basedir}/build/results/code-browser"/>
  <delete dir="${basedir}/build/results/coverage"/>
  <delete dir="${basedir}/build/results/logs"/>
  <delete dir="${basedir}/build/results/pdepend"/>
  <delete dir="${basedir}/build/results/phpdox"/>
  <delete dir="${basedir}/build/results/phpdox-app-lib"/>
 </target>

 <target name="prepare" depends="clean"
         description="Prepare for build">
  <mkdir dir="${basedir}/build/results/api"/>
  <mkdir dir="${basedir}/build/results/api-app-lib"/>
  <mkdir dir="${basedir}/build/results/code-browser"/>
  <mkdir dir="${basedir}/build/results/coverage"/>
  <mkdir dir="${basedir}/build/results/logs"/>
  <mkdir dir="${basedir}/build/results/pdepend"/>
  <mkdir dir="${basedir}/build/results/phpdox"/>
  <mkdir dir="${basedir}/build/results/phpdox-app-lib"/>
 </target>

 <target name="lint">
  <apply executable="php" failonerror="true">
   <arg value="-l" />

   <fileset dir="${basedir}/${source}">
    <include name="**/*.php" />
    <modified />
   </fileset>

   <fileset dir="${basedir}/${app-lib}">
    <include name="**/*.php" />
    <modified />
   </fileset>

   <fileset dir="${basedir}/tests">
    <include name="**/*.php" />
    <modified />
   </fileset>
  </apply>
 </target>

 <target name="phploc" description="Measure project size using PHPLOC">
  <exec executable="phploc">
   <arg value="--log-csv" />
   <arg value="${basedir}/build/results/logs/phploc.csv" />
   <arg path="${basedir}/${source}" />
   <arg path="${basedir}/${app-lib}" />
  </exec>
 </target>

 <target name="pdepend"
         description="Calculate software metrics using PHP_Depend">
  <exec executable="pdepend">
   <arg value="--jdepend-xml=${basedir}/build/results/logs/jdepend.xml" />
   <arg value="--jdepend-chart=${basedir}/build/results/pdepend/dependencies.svg" />
   <arg value="--overview-pyramid=${basedir}/build/results/pdepend/overview-pyramid.svg" />
   <arg path="${basedir}/${source},${basedir}/${app-lib}" />
  </exec>
 </target>

 <target name="phpmd"
         description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="phpmd">
   <arg path="${basedir}/${source},${basedir}/${app-lib}" />
   <arg value="text" />
   <arg value="${basedir}/build/resources/phpmd.xml" />
  </exec>
 </target>

 <target name="phpmd-ci"
         description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
  <exec executable="phpmd">
   <arg path="${basedir}/${source},${basedir}/${app-lib}" />
   <arg value="xml" />
   <arg value="${basedir}/build/resources/phpmd.xml" />
   <arg value="--reportfile" />
   <arg value="${basedir}/build/results/logs/pmd.xml" />
  </exec>
 </target>

 <target name="phpcs"
         description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="phpcs">
   <arg value="--standard=${basedir}/build/resources/coding-style/Keboola/ruleset.xml" />
   <arg path="${basedir}/${source}" />
   <arg path="${basedir}/${app-lib}"/>
  </exec>
 </target>

 <target name="phpcs-ci"
         description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
  <exec executable="phpcs" output="/dev/null">
   <arg value="--report=checkstyle" />
   <arg value="--report-file=${basedir}/build/results/logs/checkstyle.xml" />
   <arg value="--standard=${basedir}/build/resources/coding-style/Keboola/ruleset.xml" />
   <arg path="${basedir}/${source}" />
   <arg path="${basedir}/${app-lib}"/>
  </exec>
 </target>

 <target name="phpcpd" description="Find duplicate code using PHPCPD">
  <exec executable="phpcpd">
   <arg value="--log-pmd" />
   <arg value="${basedir}/build/results/logs/pmd-cpd.xml" />
   <arg path="${basedir}/${source}" />
   <arg path="${basedir}/${app-lib}" />
  </exec>
 </target>

 <target name="phpdox" description="Generate API documentation using phpDox">
  <exec executable="phpdox">
	  <arg value="--file"/>
	  <arg path="${basedir}/build/resources/phpdox.xml.dist"/>
  </exec>
 </target>

 <target name="phpunit" description="Run unit tests with PHPUnit">
  <exec executable="phpunit" failonerror="true">
	<arg value="--configuration"/>
	 <arg path="${basedir}/tests/phpunit.xml.dist"/>
  </exec>
 </target>

  <target name="phpunit-ci" description="Run unit tests with PHPUnit with coverage for CI">
  <exec executable="phpunit" failonerror="true">
	<arg value="--configuration"/>
	 <arg path="${basedir}/tests/phpunit-ci.xml.dist"/>
  </exec>
 </target>

 <target name="phpcb"
         description="Aggregate tool output with PHP_CodeBrowser">
  <exec executable="phpcb">
   <arg value="--log" />
   <arg path="${basedir}/build/results/logs" />
   <arg value="--source" />
   <arg path="${basedir}/${source}" />
   <arg value="--source" />
   <arg path="${basedir}/${app-lib}" />
   <arg value="--output" />
   <arg path="${basedir}/build/results/code-browser" />
  </exec>
 </target>
</project>
